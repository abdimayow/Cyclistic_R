---
title: "Cyclistic User Behavior Analysis"
author: "Junior Data Analyst"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# Load necessary libraries
library(ggplot2)  # For data visualization
library(dplyr)    # For data manipulation
library(lubridate) # For date and time operations
library(leaflet)  # For mapping
```

## 1. Understand the Dataset
The dataset includes:
- `ride_id`: Unique identifier for each ride.
- `rideable_type`: Type of bike used.
- `started_at` and `ended_at`: Start and end times of each trip.
- `start_station_name` and `end_station_name`: Start and end stations of the trip.
- `start_lat` and `start_lng`, `end_lat` and `end_lng`: Latitude and longitude of start and end points.
- `member_casual`: Indicates whether the rider is a "member" or "casual".

## 2. Data Preparation
```{r ,include=FALSE}
# Check for missing values
cleaned_dec_23_tripdata<- read.csv("divvy-tripdata/cleaned_dec_23.csv")
```
### 2.1 Check and Clean the Data

#### Check for Missing Values
```{r}
# Check for missing values
colSums(is.na(cleaned_dec_23_tripdata))
```

#### Remove Missing Values
```{r}
# Remove rows with missing values
cleaned_dec_23_tripdata <- na.omit(cleaned_dec_23_tripdata)
```

#### Ensure Proper Date/Time Format
```{r}
# Convert date/time fields to proper format
cleaned_dec_23_tripdata$started_at <- as.POSIXct(cleaned_dec_23_tripdata$started_at, format = "%Y-%m-%d %H:%M:%S")
cleaned_dec_23_tripdata$ended_at <- as.POSIXct(cleaned_dec_23_tripdata$ended_at, format = "%Y-%m-%d %H:%M:%S")
```

#### Remove Duplicate Records
```{r}

# Remove duplicate rows using dplyr
cleaned_dec_23_tripdata <- distinct(cleaned_dec_23_tripdata)
```

### 2.2 Add New Calculated Columns

#### Trip Duration
```{r}
# Calculate trip duration in minutes
cleaned_dec_23_tripdata$trip_duration <- as.numeric(difftime(
  cleaned_dec_23_tripdata$ended_at,
  cleaned_dec_23_tripdata$started_at,
  units = "mins"
))
```

#### Day of Week
```{r}
# Extract the day of the week
cleaned_dec_23_tripdata$day_of_week <- weekdays(cleaned_dec_23_tripdata$started_at)
```

#### Hour of the Day
```{r}
# Extract the hour from the start time
cleaned_dec_23_tripdata$hour_of_day <- as.numeric(format(cleaned_dec_23_tripdata$started_at, "%H"))
```

## 3. Analyze the Data

### 3.1 Aggregate Metrics by User Type

#### Total Number of Rides by User Type
```{r, echo=FALSE}
# Total number of rides by user type
total_rides <- table(cleaned_dec_23_tripdata$member_casual)
total_rides
```

#### Average Trip Duration by User Type
```{r, echo=FALSE}
# Average trip duration by user type
avg_duration <- aggregate(trip_duration ~ member_casual, data = cleaned_dec_23_tripdata, mean)
avg_duration

# Label average trip duration in minutes
ggplot(avg_duration, aes(x = member_casual, y = trip_duration, fill = member_casual)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = round(trip_duration, 1)), vjust = -0.5) +
  labs(title = "Average Trip Duration by User Type", x = "User Type", y = "Average Duration (minutes)") +
  theme_minimal()
```

#### Most Popular Days of the Week
```{r, echo=FALSE}
# Count rides by day of the week and user type
popular_days <- table(cleaned_dec_23_tripdata$member_casual, cleaned_dec_23_tripdata$day_of_week)

# Visualize rides by day of the week and user type
popular_days_ordered <- as.data.frame(popular_days)
colnames(popular_days_ordered) <- c("member_casual", "day_of_week", "count")
popular_days_ordered$day_of_week <- factor(popular_days_ordered$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))

# Arrange the most popular days for casual members from highest to lowest
popular_days_df <- as.data.frame(popular_days)
colnames(popular_days_df) <- c("member_casual", "day_of_week", "count")
popular_days_casual <- popular_days_df %>%
  filter(member_casual == "casual") %>%
  arrange(desc(count))
popular_days_casual

# Plot the graph
ggplot(popular_days_ordered, aes(day_of_week, count, fill = member_casual)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Rides by Day of the Week and User Type", x = "Day of the Week", y = "Number of Rides", fill = "User Type") +
  theme_minimal()
```

### 3.2 Analyze Usage Patterns

#### Station Usage Trends
```{r, echo=FALSE}
# Identify popular start and end stations by user type
popular_start_stations <- table(cleaned_dec_23_tripdata$start_station_name, cleaned_dec_23_tripdata$member_casual)

popular_end_stations <- table(cleaned_dec_23_tripdata$end_station_name, cleaned_dec_23_tripdata$member_casual)
```

#### Identify popular start stations for casual riders

```{r, echo=FALSE}
# Identify popular start stations by user type
popular_start_stations <- as.data.frame(table(cleaned_dec_23_tripdata$start_station_name, cleaned_dec_23_tripdata$member_casual))
colnames(popular_start_stations) <- c("start_station_name", "member_casual", "count")

# Get the 10 most popular start stations
popular_start_stations_top10 <- popular_start_stations %>%
  group_by(start_station_name) %>%
  summarise(total_count = sum(count)) %>%
  arrange(desc(total_count)) %>%
  slice_head(n = 10)

# Merge with member/casual data
popular_start_stations_top10 <- popular_start_stations %>%
  filter(start_station_name %in% popular_start_stations_top10$start_station_name) %>%
  filter(member_casual == "casual") %>%
  arrange(desc(count))

# Plot horizontal bar chart
ggplot(popular_start_stations_top10, aes(x = reorder(start_station_name, -count), y = count, fill = start_station_name)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  labs(title = "Top 10 Popular Start Stations for Casual Users", x = "Start Station", y = "Number of Rides", fill = "User Type") +
  theme_minimal()

```
#### Identify popular start stations for casual riders
```{r, echo=FALSE}
# Identify popular end stations by user type
popular_end_stations <- as.data.frame(table(cleaned_dec_23_tripdata$end_station_name, cleaned_dec_23_tripdata$member_casual))
colnames(popular_end_stations) <- c("end_station_name", "member_casual", "count")

# Get the 10 most popular end stations
popular_end_stations_top10 <- popular_end_stations %>%
  group_by(end_station_name) %>%
  summarise(total_count = sum(count)) %>%
  arrange(desc(total_count)) %>%
  slice_head(n = 10)

# Merge with member/casual data
popular_end_stations_top10 <- popular_end_stations %>%
  filter(end_station_name %in% popular_end_stations_top10$end_station_name) %>%
  filter(member_casual == "casual") %>%
  arrange(desc(count))

# Plot horizontal bar chart
ggplot(popular_end_stations_top10, aes(x = reorder(end_station_name, -count), y = count, fill = end_station_name)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  labs(title = "Top 10 Popular End Stations for Casual Users", x = "End Station", y = "Number of Rides", fill = "User Type") +
  theme_minimal()
```

#### Bike Type Preferences for Casual and Member riders
```{r, echo=FALSE}
# Compare preferences for bike types
bike_type_prefs <- table(cleaned_dec_23_tripdata$rideable_type, cleaned_dec_23_tripdata$member_casual)
bike_type_prefs
```

## 4. Visualize Insights

#### Bar Chart: Total Rides by User Type
```{r, echo=FALSE}
library(ggplot2)
ggplot(data = as.data.frame(total_rides), aes(x = Var1, y = Freq, fill = Var1)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = scales::percent(Freq / sum(Freq), accuracy = 0.1)), vjust = -0.5) +
  labs(title = "Total Rides by User Type", x = "User Type", y = "Total Rides") +
  theme_minimal()
```

#### Bar graph: Peak Hours by User Type
```{r, echo=FALSE}
ggplot(cleaned_dec_23_tripdata, aes(x = hour_of_day, fill = member_casual)) +
  geom_histogram(binwidth = 1, position = "dodge") +
  labs(title = "Peak Hours by User Type", x = "Hour of Day", y = "Number of Rides") +
  theme_minimal()


```
#### Heat map: peak Hours by User Type
```{r, echo=FALSE}
# Aggregate data: Count rides by user type, day of week, and hour of day
heatmap_data <- cleaned_dec_23_tripdata %>%
  group_by(member_casual, day_of_week, hour_of_day) %>%
  summarise(Total_Rides = n(),.groups = "drop") %>%
  ungroup()

# Heatmap: Peak hours and days for each user type
ggplot(heatmap_data, aes(x = hour_of_day, y = day_of_week, fill = Total_Rides)) +
  geom_tile(color = "white") +
  facet_wrap(~ member_casual, ncol = 1) +
  scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Total Rides") +
  labs(title = "Heatmap of Peak Hours and Days by User Type",
       x = "Hour of Day",
       y = "Day of Week") +
  theme_minimal() +
  theme(strip.text = element_text(size = 12, face = "bold"))

```


### Geographic Maps: Popular Routes and Stations by User Type

```{r, echo=FALSE}
# Sample preparation for mapping
popular_routes <- cleaned_dec_23_tripdata %>%
  group_by(start_station_name, end_station_name, member_casual, start_lat, start_lng, end_lat, end_lng) %>%
  summarize(total_rides = n(), .groups = "drop") %>%
  arrange(desc(total_rides))

# Split data by user type
member_routes <- popular_routes %>% filter(member_casual == "member")
casual_routes <- popular_routes %>% filter(member_casual == "casual")

# Create a Leaflet map with layer control
leaflet() %>%
  addTiles() %>%
  addCircleMarkers(
    data = member_routes,
    lng = ~start_lng, lat = ~start_lat,
    radius = ~sqrt(total_rides),
    color = "blue",
    group = "Member",
    label = ~paste(start_station_name, "to", end_station_name, "-", total_rides, "rides"),
    popup = ~paste("User Type: Member<br>Total Rides:", total_rides)
  ) %>%
  addCircleMarkers(
    data = casual_routes,
    lng = ~start_lng, lat = ~start_lat,
    radius = ~sqrt(total_rides),
    color = "red",
    group = "Casual",
    label = ~paste(start_station_name, "to", end_station_name, "-", total_rides, "rides"),
    popup = ~paste("User Type: Casual<br>Total Rides:", total_rides)
  ) %>%
  addLayersControl(
    overlayGroups = c("Member", "Casual"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addLegend(
    "bottomright",
    colors = c("blue", "red"),
    labels = c("Member", "Casual"),
    title = "User Type"
  )

```


## 5. Summarize and Recommend

### Key Findings
- **Usage Trends**: Members take more rides overall but have shorter trip durations on average.
- **Casual Riders**: Ride primarily on weekends and during leisure hours.
- **Members**: Use bikes more consistently across the week, especially during commute hours.

### Recommendations
- Design weekend promotions targeting casual riders.
- Highlight the benefits of annual memberships for regular commuting needs.
- Increase marketing efforts at popular casual rider stations to convert them to members.
